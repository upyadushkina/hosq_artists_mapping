import streamlit as st
st.cache_data.clear()

import streamlit as st
import pandas as pd
import networkx as nx
import plotly.graph_objects as go

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
@st.cache_data
def load_data():
    return pd.read_csv("HOSQ_artists.csv")

df = load_data()

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üé® –°–µ—Ç—å —Å–≤—è–∑–µ–π —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤")

# –§–∏–ª—å—Ç—Ä—ã –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
st.sidebar.header("üîç –§–∏–ª—å—Ç—Ä")
selected_style = st.sidebar.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å", df["–°—Ç–∏–ª—å"].dropna().unique())
selected_language = st.sidebar.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –æ–±—â–µ–Ω–∏—è", df["–Ø–∑—ã–∫ –æ–±—â–µ–Ω–∏—è"].dropna().unique())

# –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
filtered_df = df.copy()
if selected_style:
    filtered_df = filtered_df[df["–°—Ç–∏–ª—å"].str.contains("|".join(selected_style), na=False)]
if selected_language:
    filtered_df = filtered_df[df["–Ø–∑—ã–∫ –æ–±—â–µ–Ω–∏—è"].str.contains("|".join(selected_language), na=False)]

# –°–æ–∑–¥–∞—ë–º –≥—Ä–∞—Ñ
G = nx.Graph()
for _, row in filtered_df.iterrows():
    G.add_node(row["–ò–º—è"], group="–•—É–¥–æ–∂–Ω–∏–∫")
    for style in row["–°—Ç–∏–ª—å"].split(", "):
        G.add_node(style, group="–°—Ç–∏–ª—å")
        G.add_edge(row["–ò–º—è"], style)
    for language in row["–Ø–∑—ã–∫ –æ–±—â–µ–Ω–∏—è"].split(", "):
        G.add_node(language, group="–Ø–∑—ã–∫ –æ–±—â–µ–Ω–∏—è")
        G.add_edge(row["–ò–º—è"], language)

# –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É–∑–ª–æ–≤
pos = nx.spring_layout(G, seed=42)

# –°–æ–∑–¥–∞—ë–º —Å–≤—è–∑–∏ (—Ä—ë–±—Ä–∞)
edge_x = []
edge_y = []
for edge in G.edges():
    x0, y0 = pos[edge[0]]
    x1, y1 = pos[edge[1]]
    edge_x.extend([x0, x1, None])
    edge_y.extend([y0, y1, None])

edge_trace = go.Scatter(
    x=edge_x, y=edge_y,
    line=dict(width=1, color="#888"),
    hoverinfo='none',
    mode='lines'
)

# –£–∑–ª—ã (–≤–µ—Ä—à–∏–Ω—ã)
node_x = []
node_y = []
node_labels = []
node_colors = []

# –¶–≤–µ—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
category_colors = {
    "–•—É–¥–æ–∂–Ω–∏–∫": "#E8DED3",
    "–°—Ç–∏–ª—å": "#EC7F4D",
    "–Ø–∑—ã–∫ –æ–±—â–µ–Ω–∏—è": "#E5B8AB"
}

for node in G.nodes():
    x, y = pos[node]
    node_x.append(x)
    node_y.append(y)
    node_labels.append(str(node))
    node_colors.append(category_colors.get(G.nodes[node].get("group", ""), "#000000"))

node_trace = go.Scatter(
    x=node_x, y=node_y,
    mode='markers+text',
    text=node_labels,
    marker=dict(size=10, color=node_colors),
    textposition="top center"
)

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥—Ä–∞—Ñ
fig = go.Figure(data=[edge_trace, node_trace],
                layout=go.Layout(
                    title="–ì—Ä–∞—Ñ —Å–≤—è–∑–µ–π —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤",
                    showlegend=False,
                    hovermode='closest'
                ))

st.plotly_chart(fig)
